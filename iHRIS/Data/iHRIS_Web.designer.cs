#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iHRIS.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="iHRIS_Web")]
	public partial class iHRIS_WebDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMstEmployeeLoan(MstEmployeeLoan instance);
    partial void UpdateMstEmployeeLoan(MstEmployeeLoan instance);
    partial void DeleteMstEmployeeLoan(MstEmployeeLoan instance);
    partial void InsertMstEmployeeMemo(MstEmployeeMemo instance);
    partial void UpdateMstEmployeeMemo(MstEmployeeMemo instance);
    partial void DeleteMstEmployeeMemo(MstEmployeeMemo instance);
    partial void InsertMstEmployeeShiftCode(MstEmployeeShiftCode instance);
    partial void UpdateMstEmployeeShiftCode(MstEmployeeShiftCode instance);
    partial void DeleteMstEmployeeShiftCode(MstEmployeeShiftCode instance);
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertMstEmployeeOtherIncome(MstEmployeeOtherIncome instance);
    partial void UpdateMstEmployeeOtherIncome(MstEmployeeOtherIncome instance);
    partial void DeleteMstEmployeeOtherIncome(MstEmployeeOtherIncome instance);
    partial void InsertMstBranch(MstBranch instance);
    partial void UpdateMstBranch(MstBranch instance);
    partial void DeleteMstBranch(MstBranch instance);
    partial void InsertMstCompany(MstCompany instance);
    partial void UpdateMstCompany(MstCompany instance);
    partial void DeleteMstCompany(MstCompany instance);
    partial void InsertMstDepartment(MstDepartment instance);
    partial void UpdateMstDepartment(MstDepartment instance);
    partial void DeleteMstDepartment(MstDepartment instance);
    partial void InsertMstDivision(MstDivision instance);
    partial void UpdateMstDivision(MstDivision instance);
    partial void DeleteMstDivision(MstDivision instance);
    partial void InsertMstEmployee(MstEmployee instance);
    partial void UpdateMstEmployee(MstEmployee instance);
    partial void DeleteMstEmployee(MstEmployee instance);
    partial void InsertMstAccount(MstAccount instance);
    partial void UpdateMstAccount(MstAccount instance);
    partial void DeleteMstAccount(MstAccount instance);
    partial void InsertMstReligion(MstReligion instance);
    partial void UpdateMstReligion(MstReligion instance);
    partial void DeleteMstReligion(MstReligion instance);
    partial void InsertMstPosition(MstPosition instance);
    partial void UpdateMstPosition(MstPosition instance);
    partial void DeleteMstPosition(MstPosition instance);
    partial void InsertMstZipCode(MstZipCode instance);
    partial void UpdateMstZipCode(MstZipCode instance);
    partial void DeleteMstZipCode(MstZipCode instance);
    partial void InsertMstPayrollGroup(MstPayrollGroup instance);
    partial void UpdateMstPayrollGroup(MstPayrollGroup instance);
    partial void DeleteMstPayrollGroup(MstPayrollGroup instance);
    partial void InsertMstPayrollType(MstPayrollType instance);
    partial void UpdateMstPayrollType(MstPayrollType instance);
    partial void DeleteMstPayrollType(MstPayrollType instance);
    partial void InsertMstTaxCode(MstTaxCode instance);
    partial void UpdateMstTaxCode(MstTaxCode instance);
    partial void DeleteMstTaxCode(MstTaxCode instance);
    #endregion
		
		public iHRIS_WebDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public iHRIS_WebDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iHRIS_WebDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iHRIS_WebDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iHRIS_WebDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MstEmployeeLoan> MstEmployeeLoans
		{
			get
			{
				return this.GetTable<MstEmployeeLoan>();
			}
		}
		
		public System.Data.Linq.Table<MstEmployeeMemo> MstEmployeeMemos
		{
			get
			{
				return this.GetTable<MstEmployeeMemo>();
			}
		}
		
		public System.Data.Linq.Table<MstEmployeeShiftCode> MstEmployeeShiftCodes
		{
			get
			{
				return this.GetTable<MstEmployeeShiftCode>();
			}
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<MstEmployeeOtherIncome> MstEmployeeOtherIncomes
		{
			get
			{
				return this.GetTable<MstEmployeeOtherIncome>();
			}
		}
		
		public System.Data.Linq.Table<MstBranch> MstBranches
		{
			get
			{
				return this.GetTable<MstBranch>();
			}
		}
		
		public System.Data.Linq.Table<MstCompany> MstCompanies
		{
			get
			{
				return this.GetTable<MstCompany>();
			}
		}
		
		public System.Data.Linq.Table<MstDepartment> MstDepartments
		{
			get
			{
				return this.GetTable<MstDepartment>();
			}
		}
		
		public System.Data.Linq.Table<MstDivision> MstDivisions
		{
			get
			{
				return this.GetTable<MstDivision>();
			}
		}
		
		public System.Data.Linq.Table<MstEmployee> MstEmployees
		{
			get
			{
				return this.GetTable<MstEmployee>();
			}
		}
		
		public System.Data.Linq.Table<MstAccount> MstAccounts
		{
			get
			{
				return this.GetTable<MstAccount>();
			}
		}
		
		public System.Data.Linq.Table<MstReligion> MstReligions
		{
			get
			{
				return this.GetTable<MstReligion>();
			}
		}
		
		public System.Data.Linq.Table<MstPosition> MstPositions
		{
			get
			{
				return this.GetTable<MstPosition>();
			}
		}
		
		public System.Data.Linq.Table<MstZipCode> MstZipCodes
		{
			get
			{
				return this.GetTable<MstZipCode>();
			}
		}
		
		public System.Data.Linq.Table<MstPayrollGroup> MstPayrollGroups
		{
			get
			{
				return this.GetTable<MstPayrollGroup>();
			}
		}
		
		public System.Data.Linq.Table<MstPayrollType> MstPayrollTypes
		{
			get
			{
				return this.GetTable<MstPayrollType>();
			}
		}
		
		public System.Data.Linq.Table<MstTaxCode> MstTaxCodes
		{
			get
			{
				return this.GetTable<MstTaxCode>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstEmployeeLoan")]
	public partial class MstEmployeeLoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmployeeId;
		
		private int _OtherDeductionId;
		
		private System.Nullable<int> _LoanNumber;
		
		private decimal _LoanAmount;
		
		private decimal _MonthlyAmortization;
		
		private int _NumberOfMonths;
		
		private System.DateTime _DateStart;
		
		private decimal _TotalPayment;
		
		private decimal _Balance;
		
		private bool _IsPaid;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private string _Remarks;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnOtherDeductionIdChanging(int value);
    partial void OnOtherDeductionIdChanged();
    partial void OnLoanNumberChanging(System.Nullable<int> value);
    partial void OnLoanNumberChanged();
    partial void OnLoanAmountChanging(decimal value);
    partial void OnLoanAmountChanged();
    partial void OnMonthlyAmortizationChanging(decimal value);
    partial void OnMonthlyAmortizationChanged();
    partial void OnNumberOfMonthsChanging(int value);
    partial void OnNumberOfMonthsChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnTotalPaymentChanging(decimal value);
    partial void OnTotalPaymentChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public MstEmployeeLoan()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDeductionId", DbType="Int NOT NULL")]
		public int OtherDeductionId
		{
			get
			{
				return this._OtherDeductionId;
			}
			set
			{
				if ((this._OtherDeductionId != value))
				{
					this.OnOtherDeductionIdChanging(value);
					this.SendPropertyChanging();
					this._OtherDeductionId = value;
					this.SendPropertyChanged("OtherDeductionId");
					this.OnOtherDeductionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNumber", DbType="Int")]
		public System.Nullable<int> LoanNumber
		{
			get
			{
				return this._LoanNumber;
			}
			set
			{
				if ((this._LoanNumber != value))
				{
					this.OnLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._LoanNumber = value;
					this.SendPropertyChanged("LoanNumber");
					this.OnLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyAmortization", DbType="Decimal(18,5) NOT NULL")]
		public decimal MonthlyAmortization
		{
			get
			{
				return this._MonthlyAmortization;
			}
			set
			{
				if ((this._MonthlyAmortization != value))
				{
					this.OnMonthlyAmortizationChanging(value);
					this.SendPropertyChanging();
					this._MonthlyAmortization = value;
					this.SendPropertyChanged("MonthlyAmortization");
					this.OnMonthlyAmortizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfMonths", DbType="Int NOT NULL")]
		public int NumberOfMonths
		{
			get
			{
				return this._NumberOfMonths;
			}
			set
			{
				if ((this._NumberOfMonths != value))
				{
					this.OnNumberOfMonthsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfMonths = value;
					this.SendPropertyChanged("NumberOfMonths");
					this.OnNumberOfMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayment", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalPayment
		{
			get
			{
				return this._TotalPayment;
			}
			set
			{
				if ((this._TotalPayment != value))
				{
					this.OnTotalPaymentChanging(value);
					this.SendPropertyChanging();
					this._TotalPayment = value;
					this.SendPropertyChanged("TotalPayment");
					this.OnTotalPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,5) NOT NULL")]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
		public bool IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeLoan", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.MstEmployeeLoans.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeLoans.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstEmployeeMemo")]
	public partial class MstEmployeeMemo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmployeeId;
		
		private System.DateTime _MemoDate;
		
		private string _MemoSubject;
		
		private string _MemoContent;
		
		private int _PreparedBy;
		
		private int _ApprovedBy;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnMemoDateChanging(System.DateTime value);
    partial void OnMemoDateChanged();
    partial void OnMemoSubjectChanging(string value);
    partial void OnMemoSubjectChanged();
    partial void OnMemoContentChanging(string value);
    partial void OnMemoContentChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    #endregion
		
		public MstEmployeeMemo()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoDate", DbType="DateTime NOT NULL")]
		public System.DateTime MemoDate
		{
			get
			{
				return this._MemoDate;
			}
			set
			{
				if ((this._MemoDate != value))
				{
					this.OnMemoDateChanging(value);
					this.SendPropertyChanging();
					this._MemoDate = value;
					this.SendPropertyChanged("MemoDate");
					this.OnMemoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoSubject", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MemoSubject
		{
			get
			{
				return this._MemoSubject;
			}
			set
			{
				if ((this._MemoSubject != value))
				{
					this.OnMemoSubjectChanging(value);
					this.SendPropertyChanging();
					this._MemoSubject = value;
					this.SendPropertyChanged("MemoSubject");
					this.OnMemoSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoContent", DbType="NVarChar(MAX)")]
		public string MemoContent
		{
			get
			{
				return this._MemoContent;
			}
			set
			{
				if ((this._MemoContent != value))
				{
					this.OnMemoContentChanging(value);
					this.SendPropertyChanging();
					this._MemoContent = value;
					this.SendPropertyChanged("MemoContent");
					this.OnMemoContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeMemo", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.MstEmployeeMemos.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeMemos.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstEmployeeShiftCode")]
	public partial class MstEmployeeShiftCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmployeeId;
		
		private int _ShiftCodeId;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnShiftCodeIdChanging(int value);
    partial void OnShiftCodeIdChanged();
    #endregion
		
		public MstEmployeeShiftCode()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCodeId", DbType="Int NOT NULL")]
		public int ShiftCodeId
		{
			get
			{
				return this._ShiftCodeId;
			}
			set
			{
				if ((this._ShiftCodeId != value))
				{
					this.OnShiftCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftCodeId = value;
					this.SendPropertyChanged("ShiftCodeId");
					this.OnShiftCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeShiftCode", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.MstEmployeeShiftCodes.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeShiftCodes.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstEmployeeOtherIncome")]
	public partial class MstEmployeeOtherIncome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmployeeId;
		
		private int _OtherIncomeId;
		
		private decimal _Amount;
		
		private string _Remarks;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnOtherIncomeIdChanging(int value);
    partial void OnOtherIncomeIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public MstEmployeeOtherIncome()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncomeId", DbType="Int NOT NULL")]
		public int OtherIncomeId
		{
			get
			{
				return this._OtherIncomeId;
			}
			set
			{
				if ((this._OtherIncomeId != value))
				{
					this.OnOtherIncomeIdChanging(value);
					this.SendPropertyChanging();
					this._OtherIncomeId = value;
					this.SendPropertyChanged("OtherIncomeId");
					this.OnOtherIncomeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeOtherIncome", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.MstEmployeeOtherIncomes.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeOtherIncomes.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstBranch")]
	public partial class MstBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Branch;
		
		private int _CompanyId;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public MstBranch()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCompany")]
	public partial class MstCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Company;
		
		private string _Address;
		
		private string _SSSNumber;
		
		private string _PHICNumber;
		
		private string _HDMFNumber;
		
		private string _TIN;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnSSSNumberChanging(string value);
    partial void OnSSSNumberChanged();
    partial void OnPHICNumberChanging(string value);
    partial void OnPHICNumberChanged();
    partial void OnHDMFNumberChanging(string value);
    partial void OnHDMFNumberChanged();
    partial void OnTINChanging(string value);
    partial void OnTINChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstCompany()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SSSNumber
		{
			get
			{
				return this._SSSNumber;
			}
			set
			{
				if ((this._SSSNumber != value))
				{
					this.OnSSSNumberChanging(value);
					this.SendPropertyChanging();
					this._SSSNumber = value;
					this.SendPropertyChanged("SSSNumber");
					this.OnSSSNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHICNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PHICNumber
		{
			get
			{
				return this._PHICNumber;
			}
			set
			{
				if ((this._PHICNumber != value))
				{
					this.OnPHICNumberChanging(value);
					this.SendPropertyChanging();
					this._PHICNumber = value;
					this.SendPropertyChanged("PHICNumber");
					this.OnPHICNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMFNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HDMFNumber
		{
			get
			{
				return this._HDMFNumber;
			}
			set
			{
				if ((this._HDMFNumber != value))
				{
					this.OnHDMFNumberChanging(value);
					this.SendPropertyChanging();
					this._HDMFNumber = value;
					this.SendPropertyChanged("HDMFNumber");
					this.OnHDMFNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TIN
		{
			get
			{
				return this._TIN;
			}
			set
			{
				if ((this._TIN != value))
				{
					this.OnTINChanging(value);
					this.SendPropertyChanging();
					this._TIN = value;
					this.SendPropertyChanged("TIN");
					this.OnTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDepartment")]
	public partial class MstDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Department;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    #endregion
		
		public MstDepartment()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDepartment_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstDepartment = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstDepartment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDivision")]
	public partial class MstDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Division;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDivisionChanging(string value);
    partial void OnDivisionChanged();
    #endregion
		
		public MstDivision()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this.OnDivisionChanging(value);
					this.SendPropertyChanging();
					this._Division = value;
					this.SendPropertyChanged("Division");
					this.OnDivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDivision_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="DivisionId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstDivision = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstDivision = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstEmployee")]
	public partial class MstEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _IdNumber;
		
		private string _BiometricIdNumber;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _ExtensionName;
		
		private string _FullName;
		
		private string _Address;
		
		private int _ZipCodeId;
		
		private string _PhoneNumber;
		
		private string _CellphoneNumber;
		
		private string _EmailAddress;
		
		private System.DateTime _DateOfBirth;
		
		private string _PlaceOfBirth;
		
		private System.Nullable<int> _PlaceOfBirthZipCodeId;
		
		private System.DateTime _DateHired;
		
		private System.Nullable<System.DateTime> _DateResigned;
		
		private string _Sex;
		
		private string _CivilStatus;
		
		private int _CitizenshipId;
		
		private int _ReligionId;
		
		private decimal _Height;
		
		private decimal _Weight;
		
		private string _GSISNumber;
		
		private string _SSSNumber;
		
		private string _HDMFNumber;
		
		private string _PHICNumber;
		
		private string _TIN;
		
		private int _TaxCodeId;
		
		private string _ATMAccountNumber;
		
		private int _CompanyId;
		
		private int _BranchId;
		
		private int _DepartmentId;
		
		private int _DivisionId;
		
		private int _PositionId;
		
		private int _PayrollGroupId;
		
		private int _AccountId;
		
		private int _PayrollTypeId;
		
		private int _ShiftCodeId;
		
		private int _FixNumberOfDays;
		
		private int _FixNumberOfHours;
		
		private decimal _MonthlyRate;
		
		private decimal _PayrollRate;
		
		private decimal _DailyRate;
		
		private decimal _AbsentDailyRate;
		
		private decimal _HourlyRate;
		
		private decimal _NightHourlyRate;
		
		private decimal _OvertimeHourlyRate;
		
		private decimal _OvertimeNightHourlyRate;
		
		private decimal _TardyHourlyRate;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private string _TaxTable;
		
		private System.Nullable<decimal> _HDMFAddOn;
		
		private System.Nullable<decimal> _SSSAddOn;
		
		private string _HDMFType;
		
		private bool _SSSIsGrossAmount;
		
		private System.Nullable<bool> _IsMinimumWageEarner;
		
		private EntitySet<MstEmployeeLoan> _MstEmployeeLoans;
		
		private EntitySet<MstEmployeeMemo> _MstEmployeeMemos;
		
		private EntitySet<MstEmployeeShiftCode> _MstEmployeeShiftCodes;
		
		private EntitySet<MstEmployeeOtherIncome> _MstEmployeeOtherIncomes;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstCompany> _MstCompany;
		
		private EntityRef<MstDepartment> _MstDepartment;
		
		private EntityRef<MstDivision> _MstDivision;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstReligion> _MstReligion;
		
		private EntityRef<MstPosition> _MstPosition;
		
		private EntityRef<MstZipCode> _MstZipCode;
		
		private EntityRef<MstZipCode> _MstZipCode1;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstPayrollType> _MstPayrollType;
		
		private EntityRef<MstTaxCode> _MstTaxCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdNumberChanging(string value);
    partial void OnIdNumberChanged();
    partial void OnBiometricIdNumberChanging(string value);
    partial void OnBiometricIdNumberChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnExtensionNameChanging(string value);
    partial void OnExtensionNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipCodeIdChanging(int value);
    partial void OnZipCodeIdChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCellphoneNumberChanging(string value);
    partial void OnCellphoneNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnPlaceOfBirthChanging(string value);
    partial void OnPlaceOfBirthChanged();
    partial void OnPlaceOfBirthZipCodeIdChanging(System.Nullable<int> value);
    partial void OnPlaceOfBirthZipCodeIdChanged();
    partial void OnDateHiredChanging(System.DateTime value);
    partial void OnDateHiredChanged();
    partial void OnDateResignedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateResignedChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnCivilStatusChanging(string value);
    partial void OnCivilStatusChanged();
    partial void OnCitizenshipIdChanging(int value);
    partial void OnCitizenshipIdChanged();
    partial void OnReligionIdChanging(int value);
    partial void OnReligionIdChanged();
    partial void OnHeightChanging(decimal value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnGSISNumberChanging(string value);
    partial void OnGSISNumberChanged();
    partial void OnSSSNumberChanging(string value);
    partial void OnSSSNumberChanged();
    partial void OnHDMFNumberChanging(string value);
    partial void OnHDMFNumberChanged();
    partial void OnPHICNumberChanging(string value);
    partial void OnPHICNumberChanged();
    partial void OnTINChanging(string value);
    partial void OnTINChanged();
    partial void OnTaxCodeIdChanging(int value);
    partial void OnTaxCodeIdChanged();
    partial void OnATMAccountNumberChanging(string value);
    partial void OnATMAccountNumberChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnPositionIdChanging(int value);
    partial void OnPositionIdChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnPayrollTypeIdChanging(int value);
    partial void OnPayrollTypeIdChanged();
    partial void OnShiftCodeIdChanging(int value);
    partial void OnShiftCodeIdChanged();
    partial void OnFixNumberOfDaysChanging(int value);
    partial void OnFixNumberOfDaysChanged();
    partial void OnFixNumberOfHoursChanging(int value);
    partial void OnFixNumberOfHoursChanged();
    partial void OnMonthlyRateChanging(decimal value);
    partial void OnMonthlyRateChanged();
    partial void OnPayrollRateChanging(decimal value);
    partial void OnPayrollRateChanged();
    partial void OnDailyRateChanging(decimal value);
    partial void OnDailyRateChanged();
    partial void OnAbsentDailyRateChanging(decimal value);
    partial void OnAbsentDailyRateChanged();
    partial void OnHourlyRateChanging(decimal value);
    partial void OnHourlyRateChanged();
    partial void OnNightHourlyRateChanging(decimal value);
    partial void OnNightHourlyRateChanged();
    partial void OnOvertimeHourlyRateChanging(decimal value);
    partial void OnOvertimeHourlyRateChanged();
    partial void OnOvertimeNightHourlyRateChanging(decimal value);
    partial void OnOvertimeNightHourlyRateChanged();
    partial void OnTardyHourlyRateChanging(decimal value);
    partial void OnTardyHourlyRateChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnTaxTableChanging(string value);
    partial void OnTaxTableChanged();
    partial void OnHDMFAddOnChanging(System.Nullable<decimal> value);
    partial void OnHDMFAddOnChanged();
    partial void OnSSSAddOnChanging(System.Nullable<decimal> value);
    partial void OnSSSAddOnChanged();
    partial void OnHDMFTypeChanging(string value);
    partial void OnHDMFTypeChanged();
    partial void OnSSSIsGrossAmountChanging(bool value);
    partial void OnSSSIsGrossAmountChanged();
    partial void OnIsMinimumWageEarnerChanging(System.Nullable<bool> value);
    partial void OnIsMinimumWageEarnerChanged();
    #endregion
		
		public MstEmployee()
		{
			this._MstEmployeeLoans = new EntitySet<MstEmployeeLoan>(new Action<MstEmployeeLoan>(this.attach_MstEmployeeLoans), new Action<MstEmployeeLoan>(this.detach_MstEmployeeLoans));
			this._MstEmployeeMemos = new EntitySet<MstEmployeeMemo>(new Action<MstEmployeeMemo>(this.attach_MstEmployeeMemos), new Action<MstEmployeeMemo>(this.detach_MstEmployeeMemos));
			this._MstEmployeeShiftCodes = new EntitySet<MstEmployeeShiftCode>(new Action<MstEmployeeShiftCode>(this.attach_MstEmployeeShiftCodes), new Action<MstEmployeeShiftCode>(this.detach_MstEmployeeShiftCodes));
			this._MstEmployeeOtherIncomes = new EntitySet<MstEmployeeOtherIncome>(new Action<MstEmployeeOtherIncome>(this.attach_MstEmployeeOtherIncomes), new Action<MstEmployeeOtherIncome>(this.detach_MstEmployeeOtherIncomes));
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstCompany = default(EntityRef<MstCompany>);
			this._MstDepartment = default(EntityRef<MstDepartment>);
			this._MstDivision = default(EntityRef<MstDivision>);
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstReligion = default(EntityRef<MstReligion>);
			this._MstPosition = default(EntityRef<MstPosition>);
			this._MstZipCode = default(EntityRef<MstZipCode>);
			this._MstZipCode1 = default(EntityRef<MstZipCode>);
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstPayrollType = default(EntityRef<MstPayrollType>);
			this._MstTaxCode = default(EntityRef<MstTaxCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IdNumber
		{
			get
			{
				return this._IdNumber;
			}
			set
			{
				if ((this._IdNumber != value))
				{
					this.OnIdNumberChanging(value);
					this.SendPropertyChanging();
					this._IdNumber = value;
					this.SendPropertyChanged("IdNumber");
					this.OnIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BiometricIdNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BiometricIdNumber
		{
			get
			{
				return this._BiometricIdNumber;
			}
			set
			{
				if ((this._BiometricIdNumber != value))
				{
					this.OnBiometricIdNumberChanging(value);
					this.SendPropertyChanging();
					this._BiometricIdNumber = value;
					this.SendPropertyChanged("BiometricIdNumber");
					this.OnBiometricIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionName", DbType="NVarChar(50)")]
		public string ExtensionName
		{
			get
			{
				return this._ExtensionName;
			}
			set
			{
				if ((this._ExtensionName != value))
				{
					this.OnExtensionNameChanging(value);
					this.SendPropertyChanging();
					this._ExtensionName = value;
					this.SendPropertyChanged("ExtensionName");
					this.OnExtensionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCodeId", DbType="Int NOT NULL")]
		public int ZipCodeId
		{
			get
			{
				return this._ZipCodeId;
			}
			set
			{
				if ((this._ZipCodeId != value))
				{
					if (this._MstZipCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZipCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ZipCodeId = value;
					this.SendPropertyChanged("ZipCodeId");
					this.OnZipCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellphoneNumber", DbType="NVarChar(50)")]
		public string CellphoneNumber
		{
			get
			{
				return this._CellphoneNumber;
			}
			set
			{
				if ((this._CellphoneNumber != value))
				{
					this.OnCellphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellphoneNumber = value;
					this.SendPropertyChanged("CellphoneNumber");
					this.OnCellphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfBirth", DbType="NVarChar(MAX)")]
		public string PlaceOfBirth
		{
			get
			{
				return this._PlaceOfBirth;
			}
			set
			{
				if ((this._PlaceOfBirth != value))
				{
					this.OnPlaceOfBirthChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfBirth = value;
					this.SendPropertyChanged("PlaceOfBirth");
					this.OnPlaceOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfBirthZipCodeId", DbType="Int")]
		public System.Nullable<int> PlaceOfBirthZipCodeId
		{
			get
			{
				return this._PlaceOfBirthZipCodeId;
			}
			set
			{
				if ((this._PlaceOfBirthZipCodeId != value))
				{
					if (this._MstZipCode1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceOfBirthZipCodeIdChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfBirthZipCodeId = value;
					this.SendPropertyChanged("PlaceOfBirthZipCodeId");
					this.OnPlaceOfBirthZipCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateHired", DbType="DateTime NOT NULL")]
		public System.DateTime DateHired
		{
			get
			{
				return this._DateHired;
			}
			set
			{
				if ((this._DateHired != value))
				{
					this.OnDateHiredChanging(value);
					this.SendPropertyChanging();
					this._DateHired = value;
					this.SendPropertyChanged("DateHired");
					this.OnDateHiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateResigned", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateResigned
		{
			get
			{
				return this._DateResigned;
			}
			set
			{
				if ((this._DateResigned != value))
				{
					this.OnDateResignedChanging(value);
					this.SendPropertyChanging();
					this._DateResigned = value;
					this.SendPropertyChanged("DateResigned");
					this.OnDateResignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CivilStatus
		{
			get
			{
				return this._CivilStatus;
			}
			set
			{
				if ((this._CivilStatus != value))
				{
					this.OnCivilStatusChanging(value);
					this.SendPropertyChanging();
					this._CivilStatus = value;
					this.SendPropertyChanged("CivilStatus");
					this.OnCivilStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitizenshipId", DbType="Int NOT NULL")]
		public int CitizenshipId
		{
			get
			{
				return this._CitizenshipId;
			}
			set
			{
				if ((this._CitizenshipId != value))
				{
					this.OnCitizenshipIdChanging(value);
					this.SendPropertyChanging();
					this._CitizenshipId = value;
					this.SendPropertyChanged("CitizenshipId");
					this.OnCitizenshipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReligionId", DbType="Int NOT NULL")]
		public int ReligionId
		{
			get
			{
				return this._ReligionId;
			}
			set
			{
				if ((this._ReligionId != value))
				{
					if (this._MstReligion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReligionIdChanging(value);
					this.SendPropertyChanging();
					this._ReligionId = value;
					this.SendPropertyChanged("ReligionId");
					this.OnReligionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Decimal(18,5) NOT NULL")]
		public decimal Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,5) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSISNumber", DbType="NVarChar(50)")]
		public string GSISNumber
		{
			get
			{
				return this._GSISNumber;
			}
			set
			{
				if ((this._GSISNumber != value))
				{
					this.OnGSISNumberChanging(value);
					this.SendPropertyChanging();
					this._GSISNumber = value;
					this.SendPropertyChanged("GSISNumber");
					this.OnGSISNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSNumber", DbType="NVarChar(50)")]
		public string SSSNumber
		{
			get
			{
				return this._SSSNumber;
			}
			set
			{
				if ((this._SSSNumber != value))
				{
					this.OnSSSNumberChanging(value);
					this.SendPropertyChanging();
					this._SSSNumber = value;
					this.SendPropertyChanged("SSSNumber");
					this.OnSSSNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMFNumber", DbType="NVarChar(50)")]
		public string HDMFNumber
		{
			get
			{
				return this._HDMFNumber;
			}
			set
			{
				if ((this._HDMFNumber != value))
				{
					this.OnHDMFNumberChanging(value);
					this.SendPropertyChanging();
					this._HDMFNumber = value;
					this.SendPropertyChanged("HDMFNumber");
					this.OnHDMFNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHICNumber", DbType="NVarChar(50)")]
		public string PHICNumber
		{
			get
			{
				return this._PHICNumber;
			}
			set
			{
				if ((this._PHICNumber != value))
				{
					this.OnPHICNumberChanging(value);
					this.SendPropertyChanging();
					this._PHICNumber = value;
					this.SendPropertyChanged("PHICNumber");
					this.OnPHICNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIN", DbType="NVarChar(50)")]
		public string TIN
		{
			get
			{
				return this._TIN;
			}
			set
			{
				if ((this._TIN != value))
				{
					this.OnTINChanging(value);
					this.SendPropertyChanging();
					this._TIN = value;
					this.SendPropertyChanged("TIN");
					this.OnTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCodeId", DbType="Int NOT NULL")]
		public int TaxCodeId
		{
			get
			{
				return this._TaxCodeId;
			}
			set
			{
				if ((this._TaxCodeId != value))
				{
					if (this._MstTaxCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxCodeIdChanging(value);
					this.SendPropertyChanging();
					this._TaxCodeId = value;
					this.SendPropertyChanged("TaxCodeId");
					this.OnTaxCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATMAccountNumber", DbType="NVarChar(50)")]
		public string ATMAccountNumber
		{
			get
			{
				return this._ATMAccountNumber;
			}
			set
			{
				if ((this._ATMAccountNumber != value))
				{
					this.OnATMAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._ATMAccountNumber = value;
					this.SendPropertyChanged("ATMAccountNumber");
					this.OnATMAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._MstDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int NOT NULL")]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					if (this._MstDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="Int NOT NULL")]
		public int PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					if (this._MstPosition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollTypeId", DbType="Int NOT NULL")]
		public int PayrollTypeId
		{
			get
			{
				return this._PayrollTypeId;
			}
			set
			{
				if ((this._PayrollTypeId != value))
				{
					if (this._MstPayrollType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollTypeId = value;
					this.SendPropertyChanged("PayrollTypeId");
					this.OnPayrollTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCodeId", DbType="Int NOT NULL")]
		public int ShiftCodeId
		{
			get
			{
				return this._ShiftCodeId;
			}
			set
			{
				if ((this._ShiftCodeId != value))
				{
					this.OnShiftCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftCodeId = value;
					this.SendPropertyChanged("ShiftCodeId");
					this.OnShiftCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixNumberOfDays", DbType="Int NOT NULL")]
		public int FixNumberOfDays
		{
			get
			{
				return this._FixNumberOfDays;
			}
			set
			{
				if ((this._FixNumberOfDays != value))
				{
					this.OnFixNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._FixNumberOfDays = value;
					this.SendPropertyChanged("FixNumberOfDays");
					this.OnFixNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixNumberOfHours", DbType="Int NOT NULL")]
		public int FixNumberOfHours
		{
			get
			{
				return this._FixNumberOfHours;
			}
			set
			{
				if ((this._FixNumberOfHours != value))
				{
					this.OnFixNumberOfHoursChanging(value);
					this.SendPropertyChanging();
					this._FixNumberOfHours = value;
					this.SendPropertyChanged("FixNumberOfHours");
					this.OnFixNumberOfHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal MonthlyRate
		{
			get
			{
				return this._MonthlyRate;
			}
			set
			{
				if ((this._MonthlyRate != value))
				{
					this.OnMonthlyRateChanging(value);
					this.SendPropertyChanging();
					this._MonthlyRate = value;
					this.SendPropertyChanged("MonthlyRate");
					this.OnMonthlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal PayrollRate
		{
			get
			{
				return this._PayrollRate;
			}
			set
			{
				if ((this._PayrollRate != value))
				{
					this.OnPayrollRateChanging(value);
					this.SendPropertyChanging();
					this._PayrollRate = value;
					this.SendPropertyChanged("PayrollRate");
					this.OnPayrollRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DailyRate
		{
			get
			{
				return this._DailyRate;
			}
			set
			{
				if ((this._DailyRate != value))
				{
					this.OnDailyRateChanging(value);
					this.SendPropertyChanging();
					this._DailyRate = value;
					this.SendPropertyChanged("DailyRate");
					this.OnDailyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsentDailyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal AbsentDailyRate
		{
			get
			{
				return this._AbsentDailyRate;
			}
			set
			{
				if ((this._AbsentDailyRate != value))
				{
					this.OnAbsentDailyRateChanging(value);
					this.SendPropertyChanging();
					this._AbsentDailyRate = value;
					this.SendPropertyChanged("AbsentDailyRate");
					this.OnAbsentDailyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal HourlyRate
		{
			get
			{
				return this._HourlyRate;
			}
			set
			{
				if ((this._HourlyRate != value))
				{
					this.OnHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._HourlyRate = value;
					this.SendPropertyChanged("HourlyRate");
					this.OnHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightHourlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal NightHourlyRate
		{
			get
			{
				return this._NightHourlyRate;
			}
			set
			{
				if ((this._NightHourlyRate != value))
				{
					this.OnNightHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._NightHourlyRate = value;
					this.SendPropertyChanged("NightHourlyRate");
					this.OnNightHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeHourlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeHourlyRate
		{
			get
			{
				return this._OvertimeHourlyRate;
			}
			set
			{
				if ((this._OvertimeHourlyRate != value))
				{
					this.OnOvertimeHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._OvertimeHourlyRate = value;
					this.SendPropertyChanged("OvertimeHourlyRate");
					this.OnOvertimeHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeNightHourlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeNightHourlyRate
		{
			get
			{
				return this._OvertimeNightHourlyRate;
			}
			set
			{
				if ((this._OvertimeNightHourlyRate != value))
				{
					this.OnOvertimeNightHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._OvertimeNightHourlyRate = value;
					this.SendPropertyChanged("OvertimeNightHourlyRate");
					this.OnOvertimeNightHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TardyHourlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TardyHourlyRate
		{
			get
			{
				return this._TardyHourlyRate;
			}
			set
			{
				if ((this._TardyHourlyRate != value))
				{
					this.OnTardyHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._TardyHourlyRate = value;
					this.SendPropertyChanged("TardyHourlyRate");
					this.OnTardyHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxTable", DbType="NVarChar(50)")]
		public string TaxTable
		{
			get
			{
				return this._TaxTable;
			}
			set
			{
				if ((this._TaxTable != value))
				{
					this.OnTaxTableChanging(value);
					this.SendPropertyChanging();
					this._TaxTable = value;
					this.SendPropertyChanged("TaxTable");
					this.OnTaxTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMFAddOn", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> HDMFAddOn
		{
			get
			{
				return this._HDMFAddOn;
			}
			set
			{
				if ((this._HDMFAddOn != value))
				{
					this.OnHDMFAddOnChanging(value);
					this.SendPropertyChanging();
					this._HDMFAddOn = value;
					this.SendPropertyChanged("HDMFAddOn");
					this.OnHDMFAddOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSAddOn", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> SSSAddOn
		{
			get
			{
				return this._SSSAddOn;
			}
			set
			{
				if ((this._SSSAddOn != value))
				{
					this.OnSSSAddOnChanging(value);
					this.SendPropertyChanging();
					this._SSSAddOn = value;
					this.SendPropertyChanged("SSSAddOn");
					this.OnSSSAddOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMFType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HDMFType
		{
			get
			{
				return this._HDMFType;
			}
			set
			{
				if ((this._HDMFType != value))
				{
					this.OnHDMFTypeChanging(value);
					this.SendPropertyChanging();
					this._HDMFType = value;
					this.SendPropertyChanged("HDMFType");
					this.OnHDMFTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSIsGrossAmount", DbType="Bit NOT NULL")]
		public bool SSSIsGrossAmount
		{
			get
			{
				return this._SSSIsGrossAmount;
			}
			set
			{
				if ((this._SSSIsGrossAmount != value))
				{
					this.OnSSSIsGrossAmountChanging(value);
					this.SendPropertyChanging();
					this._SSSIsGrossAmount = value;
					this.SendPropertyChanged("SSSIsGrossAmount");
					this.OnSSSIsGrossAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMinimumWageEarner", DbType="Bit")]
		public System.Nullable<bool> IsMinimumWageEarner
		{
			get
			{
				return this._IsMinimumWageEarner;
			}
			set
			{
				if ((this._IsMinimumWageEarner != value))
				{
					this.OnIsMinimumWageEarnerChanging(value);
					this.SendPropertyChanging();
					this._IsMinimumWageEarner = value;
					this.SendPropertyChanged("IsMinimumWageEarner");
					this.OnIsMinimumWageEarnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeLoan", Storage="_MstEmployeeLoans", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<MstEmployeeLoan> MstEmployeeLoans
		{
			get
			{
				return this._MstEmployeeLoans;
			}
			set
			{
				this._MstEmployeeLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeMemo", Storage="_MstEmployeeMemos", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<MstEmployeeMemo> MstEmployeeMemos
		{
			get
			{
				return this._MstEmployeeMemos;
			}
			set
			{
				this._MstEmployeeMemos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeShiftCode", Storage="_MstEmployeeShiftCodes", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<MstEmployeeShiftCode> MstEmployeeShiftCodes
		{
			get
			{
				return this._MstEmployeeShiftCodes;
			}
			set
			{
				this._MstEmployeeShiftCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeOtherIncome", Storage="_MstEmployeeOtherIncomes", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<MstEmployeeOtherIncome> MstEmployeeOtherIncomes
		{
			get
			{
				return this._MstEmployeeOtherIncomes;
			}
			set
			{
				this._MstEmployeeOtherIncomes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstEmployee", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstEmployee", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDepartment_MstEmployee", Storage="_MstDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public MstDepartment MstDepartment
		{
			get
			{
				return this._MstDepartment.Entity;
			}
			set
			{
				MstDepartment previousValue = this._MstDepartment.Entity;
				if (((previousValue != value) 
							|| (this._MstDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDepartment.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstDepartment.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(int);
					}
					this.SendPropertyChanged("MstDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDivision_MstEmployee", Storage="_MstDivision", ThisKey="DivisionId", OtherKey="Id", IsForeignKey=true)]
		public MstDivision MstDivision
		{
			get
			{
				return this._MstDivision.Entity;
			}
			set
			{
				MstDivision previousValue = this._MstDivision.Entity;
				if (((previousValue != value) 
							|| (this._MstDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDivision.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstDivision.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._DivisionId = value.Id;
					}
					else
					{
						this._DivisionId = default(int);
					}
					this.SendPropertyChanged("MstDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstEmployee", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstReligion_MstEmployee", Storage="_MstReligion", ThisKey="ReligionId", OtherKey="Id", IsForeignKey=true)]
		public MstReligion MstReligion
		{
			get
			{
				return this._MstReligion.Entity;
			}
			set
			{
				MstReligion previousValue = this._MstReligion.Entity;
				if (((previousValue != value) 
							|| (this._MstReligion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstReligion.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstReligion.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._ReligionId = value.Id;
					}
					else
					{
						this._ReligionId = default(int);
					}
					this.SendPropertyChanged("MstReligion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPosition_MstEmployee", Storage="_MstPosition", ThisKey="PositionId", OtherKey="Id", IsForeignKey=true)]
		public MstPosition MstPosition
		{
			get
			{
				return this._MstPosition.Entity;
			}
			set
			{
				MstPosition previousValue = this._MstPosition.Entity;
				if (((previousValue != value) 
							|| (this._MstPosition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPosition.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstPosition.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._PositionId = value.Id;
					}
					else
					{
						this._PositionId = default(int);
					}
					this.SendPropertyChanged("MstPosition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstZipCode_MstEmployee", Storage="_MstZipCode", ThisKey="ZipCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstZipCode MstZipCode
		{
			get
			{
				return this._MstZipCode.Entity;
			}
			set
			{
				MstZipCode previousValue = this._MstZipCode.Entity;
				if (((previousValue != value) 
							|| (this._MstZipCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstZipCode.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstZipCode.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._ZipCodeId = value.Id;
					}
					else
					{
						this._ZipCodeId = default(int);
					}
					this.SendPropertyChanged("MstZipCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstZipCode_MstEmployee1", Storage="_MstZipCode1", ThisKey="PlaceOfBirthZipCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstZipCode MstZipCode1
		{
			get
			{
				return this._MstZipCode1.Entity;
			}
			set
			{
				MstZipCode previousValue = this._MstZipCode1.Entity;
				if (((previousValue != value) 
							|| (this._MstZipCode1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstZipCode1.Entity = null;
						previousValue.MstEmployees1.Remove(this);
					}
					this._MstZipCode1.Entity = value;
					if ((value != null))
					{
						value.MstEmployees1.Add(this);
						this._PlaceOfBirthZipCodeId = value.Id;
					}
					else
					{
						this._PlaceOfBirthZipCodeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstZipCode1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_MstEmployee", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollType_MstEmployee", Storage="_MstPayrollType", ThisKey="PayrollTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollType MstPayrollType
		{
			get
			{
				return this._MstPayrollType.Entity;
			}
			set
			{
				MstPayrollType previousValue = this._MstPayrollType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollType.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstPayrollType.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._PayrollTypeId = value.Id;
					}
					else
					{
						this._PayrollTypeId = default(int);
					}
					this.SendPropertyChanged("MstPayrollType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxCode_MstEmployee", Storage="_MstTaxCode", ThisKey="TaxCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxCode MstTaxCode
		{
			get
			{
				return this._MstTaxCode.Entity;
			}
			set
			{
				MstTaxCode previousValue = this._MstTaxCode.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxCode.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstTaxCode.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._TaxCodeId = value.Id;
					}
					else
					{
						this._TaxCodeId = default(int);
					}
					this.SendPropertyChanged("MstTaxCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployeeLoans(MstEmployeeLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_MstEmployeeLoans(MstEmployeeLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_MstEmployeeMemos(MstEmployeeMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_MstEmployeeMemos(MstEmployeeMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_MstEmployeeShiftCodes(MstEmployeeShiftCode entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_MstEmployeeShiftCodes(MstEmployeeShiftCode entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_MstEmployeeOtherIncomes(MstEmployeeOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_MstEmployeeOtherIncomes(MstEmployeeOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccount")]
	public partial class MstAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccountCode;
		
		private string _Account;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    #endregion
		
		public MstAccount()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstReligion")]
	public partial class MstReligion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Religion;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    #endregion
		
		public MstReligion()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstReligion_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="ReligionId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstReligion = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstReligion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPosition")]
	public partial class MstPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Position;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    #endregion
		
		public MstPosition()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPosition_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="PositionId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPosition = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPosition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstZipCode")]
	public partial class MstZipCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ZipCode;
		
		private string _Location;
		
		private string _Area;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
		private EntitySet<MstEmployee> _MstEmployees1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    #endregion
		
		public MstZipCode()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			this._MstEmployees1 = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees1), new Action<MstEmployee>(this.detach_MstEmployees1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstZipCode_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="ZipCodeId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstZipCode_MstEmployee1", Storage="_MstEmployees1", ThisKey="Id", OtherKey="PlaceOfBirthZipCodeId")]
		public EntitySet<MstEmployee> MstEmployees1
		{
			get
			{
				return this._MstEmployees1;
			}
			set
			{
				this._MstEmployees1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstZipCode = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstZipCode = null;
		}
		
		private void attach_MstEmployees1(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstZipCode1 = this;
		}
		
		private void detach_MstEmployees1(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstZipCode1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPayrollGroup")]
	public partial class MstPayrollGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PayrollGroup;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayrollGroupChanging(string value);
    partial void OnPayrollGroupChanged();
    #endregion
		
		public MstPayrollGroup()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroup", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PayrollGroup
		{
			get
			{
				return this._PayrollGroup;
			}
			set
			{
				if ((this._PayrollGroup != value))
				{
					this.OnPayrollGroupChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroup = value;
					this.SendPropertyChanged("PayrollGroup");
					this.OnPayrollGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPayrollType")]
	public partial class MstPayrollType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PayrollType;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayrollTypeChanging(string value);
    partial void OnPayrollTypeChanged();
    #endregion
		
		public MstPayrollType()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PayrollType
		{
			get
			{
				return this._PayrollType;
			}
			set
			{
				if ((this._PayrollType != value))
				{
					this.OnPayrollTypeChanging(value);
					this.SendPropertyChanging();
					this._PayrollType = value;
					this.SendPropertyChanged("PayrollType");
					this.OnPayrollTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollType_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="PayrollTypeId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollType = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTaxCode")]
	public partial class MstTaxCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TaxCode;
		
		private decimal _ExemptionAmount;
		
		private decimal _DependentAmount;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnExemptionAmountChanging(decimal value);
    partial void OnExemptionAmountChanged();
    partial void OnDependentAmountChanging(decimal value);
    partial void OnDependentAmountChanged();
    #endregion
		
		public MstTaxCode()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExemptionAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal ExemptionAmount
		{
			get
			{
				return this._ExemptionAmount;
			}
			set
			{
				if ((this._ExemptionAmount != value))
				{
					this.OnExemptionAmountChanging(value);
					this.SendPropertyChanging();
					this._ExemptionAmount = value;
					this.SendPropertyChanged("ExemptionAmount");
					this.OnExemptionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DependentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DependentAmount
		{
			get
			{
				return this._DependentAmount;
			}
			set
			{
				if ((this._DependentAmount != value))
				{
					this.OnDependentAmountChanging(value);
					this.SendPropertyChanging();
					this._DependentAmount = value;
					this.SendPropertyChanged("DependentAmount");
					this.OnDependentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxCode_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="TaxCodeId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxCode = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxCode = null;
		}
	}
}
#pragma warning restore 1591
